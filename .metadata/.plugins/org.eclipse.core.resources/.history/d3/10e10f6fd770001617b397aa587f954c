package ipah_CSCI201L_Assignment1;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Jeopardy_Game {
	private String fileName; 
	
	
	public void startGame(String file) throws FileNotFoundException{//displays first prompts
		
		fileName = file;
		
		Scanner response = new Scanner(System.in);
		
		File_reader(fileName);
		
		System.out.println("Please enter the number of teams that will be playing this game.");
		
		
		
		String num_teams; 
		
		num_teams= response.nextLine();
		if(num_teams.equals("exit") || num_teams.equals("replay") ){
			System.out.println("Game Over...Restarting.");
			response.close();
			return;
			//ends game. possibly have a Game class and a restart function
		}
		
		
		
		
		while(!num_teams.equals("1") && !num_teams.equals("2") && !num_teams.equals("3") && !num_teams.equals("4") ){
			
			System.out.println("Please enter a valid number of teams.");
			
			System.out.println("Please enter the number of teams that will be playing this game.");
			response = new Scanner(System.in);
			num_teams = response.nextLine();
			if(num_teams.equals("exit") || num_teams.equals("replay") ){
				System.out.println("Game Over...Restarting.");
				response.close();
				return;
				//ends game. possibly have a Game class and a restart function
			}
			response.close();
			
		}
		//Jeopardy_Teams team_name = new Jeopardy_Teams();
		 
		
				
		System.out.println("There are " + num_teams + " teams playing Jeopardy.");
		
		int team_integer = Integer.parseInt(num_teams);
		setNumOfTeams(team_integer);
		//Jeopardy_Teams arr[] = new Jeopardy_Teams[team_integer]; // array that holds teams. 
		
		String name;
		
		for(int i = 1; i <team_integer+1; i++){
			
			System.out.println("Please choose a name for Team " + i + ".");
			
			name = response.nextLine();
			if(name.equals("exit") || name.equals("replay") ){
				System.out.println("Game Over...Restarting.");
				response.close();
				return;
				//ends game. possibly have a Game class and a restart function
			}
			
			
			int correct_index = i-1; //to get the correct index for arr since 'i' starts at 1
			addTeamToGame(correct_index, name);
			
			
			/*arr[correct_index] = new Jeopardy_Teams(); //creates a team
			arr[correct_index].setName(name);// respective team name*/
			
			
			System.out.println("Team " + i+ " your name is: " + name);
			
		}
	}
	
	
	//FILE READER
	
	public void File_reader(String fileName) throws FileNotFoundException{
		Scanner scanner = new Scanner(System.in);
	/*	
		System.out.print("Please enter the game file.");
		String fileName = scanner.nextLine();
		

		*/
		File f = new File(fileName);
		System.out.print(f.isFile() + " wtf");
		//System.out.println(f.getAbsolutePath());
		
		scanner = new Scanner(new File("src/Test1"));
		
		
		while(scanner.hasNextLine()){
			String[] split = scanner.nextLine().split("::");
			System.out.println(split.length);
			System.out.println(split[0]);
			if(split.length != 5){
				System.out.println("ERROR:Invalid number of categories.");
				return;
			}
			else{
				for(int i =0; i< split.length; i++){
					Categories new_cat = new Categories(split[i]); 
					int index = categories.length; 
					categories[index] = new_cat; 
				}
			}
		}
		
		
		
		scanner.close();
	}
	
	
	//TEAMS 
	private int numberOfTeams;
	private Jeopardy_Teams team_holder[]; //array that holds teams.

	public void setNumOfTeams(int num){
		numberOfTeams = num;
		team_holder = new Jeopardy_Teams[numberOfTeams];
	}
	public void addTeamToGame(int index, String name){ //adds teams to array and sets team names
		team_holder[index] = new Jeopardy_Teams();
		team_holder[index].setName(name);
	}
	public void printAll(){
		for(int i =0; i < numberOfTeams; i++){
			team_holder[i].printTeamInfo();
		}
	}
	//GAME QUESTIONS/CATEGORIES
	//-array of the five categories
	//-array off
	
	private Categories[] categories = new Categories[5];
	private String[] pointVals = new String[5];
	private Questions[] questionArr = new Questions[26]; //array that holds questions.
	
	
	public void addCategories(Categories cat){
		categories[categories.length] = cat;
	}
	public void setPointVals(String[] vals){
		pointVals = vals; 
	}
	
	
}
